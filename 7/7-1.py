# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
# который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix
# (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы
# складываем с первым элементом первой строки второй матрицы и т.д.

class Matrix:
    def __init__(self, data):
        # Корректность входных данных не проверяем, хотя, конечно, нужно
        # Превращаем двумерный массив в одномерный - так проще

        self._rows = len(data)
        self._cols = len(data[0])
        self._data = data

    def __str__(self):
        string = ""
        for i in self._data:
            for j in i:
                string += str(j) + "\t"
            string.removesuffix("\t")
            string += "\n"
        return string

    def __add__(self, other):
        # Опять же, не проверяем корректность аргументов, хотя нужно
        result = []
        for i in range(self._rows):
            row = []
            for j in range(self._cols):
                row.append(self._data[i][j] + other._data[i][j])
            result.append(row)

        return Matrix(result)


m1 = Matrix([[1, 2, 3], [4, 5, 6]])
m2 = Matrix([[1, 2, 3], [4, 5, 6]])
m3 = m1 + m2
print(str(m3))
